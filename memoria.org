#+options: toc:nil date:nil
#+BIND: org-latex-image-default-width 0.98\linewidth
#+TITLE: Hack the Crack
#+AUTHOR: Luis Antonio Ortega Andrés@@latex: \\@@Jose Antonio Alvarez Ocete@@latex: \\@@Pedro Bonilla Nadal@@latex: \\@@Francisco Luque Sánchez
#+LATEX_HEADER: \usepackage{placeins}
#+LATEX_HEADER: \setlength{\parindent}{0in}
#+LATEX_HEADER: \usepackage[margin=1.2in]{geometry}

* Introduction

In this document we discuss our approach to the McKinsey&Company challenge in HackUPC 2019. In this challenge we try to predict the severity of car crashes in UK from a given data set. 

Our initial attempts consisted in running some basic ML algorithms that did not work out due to the data size and complexity, as expected. We invested a few hours in studying the problem. After applying some preprocessing to the data we run a Random Forest algorithm to predict variable relevance.
With this knowledge we used other ML algorithms to obtain our final results.

* Initial analysis

During this challenge we used both Python processing with Pandas and KNIME. With the latter, we started by running *C4.5* and *Random Forest* algorithms, obtaining =F1-scores= for each class instead of a global one. This showed a failry good =F1-score= for the non-severe accidents class (around ~0.8~) and a criticaly low one (around ~0.01~) for the sever accidents class, the one we are trying to predict. Because of this we realized that the class was completely imbalanced: Only ~17.15%~ of our dataset were severe accidents.


After this we really dived into the data. On one hand we developed a geographic study. By displaying the latitude and longitude attributes over a world map we discovered a lot of invalid instances. The map also shows a South focused distribution, where the population aglomerates.
 
#+CAPTION: Caption
[[./images/merged.png]]
\FloatBarrier
#+CAPTION: Caption
[[./images/map1.png]]
\FloatBarrier

On this study is also worth mentioning the number of variables that contains geographic information. Here we include =Latitute=, =Longitude=, =Location Easting OSGR=, =Location Northing OSGR=, =Local Authority (District)=, =Local Authority (Highway Authority - ONS code)= and =Police Force=. In fact, =Police Force= is the one that best summarizes this information since it describes the police force in charge of the area where the accident took place, dividing UK in districts. This reasoning was confirmed afterwards by the Random Forest algorithm, which is explained in the section COMPLETAR.


On the other hand we applied statistics methods to distinguish which variables are really meaninful. By fixing a variable and value, we look at the percentage of severe accidents which happens when ~variable = value~. For example:

#+CAPTION: Caption
|-----------+-------+-----------+------------|
| Day       | count | p. slight | p. serious |
|-----------+-------+-----------+------------|
| Monday    | 19343 |  0.835910 |   0.164090 |
| Sunday    | 16632 |  0.813312 |   0.186688 |
| Saturday  | 17750 |  0.817803 |   0.182197 |
| Wednesday | 20082 |  0.828155 |   0.171845 |
| Friday    | 21348 |  0.828602 |   0.171398 |
| Tuesday   | 19796 |  0.832239 |   0.167761 |
| Thursday  | 20800 |  0.833125 |   0.166875 |
|-----------+-------+-----------+------------|

\FloatBarrier
* Preprocessing strategies

We started by deleting duplicated and invalid instances, such as the accidents that occured in Morocco coast. 
